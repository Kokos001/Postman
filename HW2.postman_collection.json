{
	"info": {
		"_postman_id": "95a5bc26-43e9-44ac-be11-db81d10f75b5",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20738266"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    typeof pm.response.text() == \"string\";\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					],
					"query": [
						{
							"key": "name",
							"value": "Kokos",
							"disabled": true
						},
						{
							"key": "age",
							"value": "18",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Res_body = pm.response.json();\r",
							"\r",
							"pm.test(\"Check Name(Manual)\", function () {\r",
							"    Res_body.name == \"Kokos\";\r",
							"});\r",
							"\r",
							"pm.test(\"Check Age(Manual)\", function () {\r",
							"    Res_body.age == 18;\r",
							"});\r",
							"\r",
							"pm.test(\"Check Salary(Manual)\", function () {\r",
							"    Res_body.salary == 1000;\r",
							"});\r",
							"\r",
							"var Req_body = request.data;\r",
							"pm.test(\"Check Name (Req)\", function () {\r",
							"    Res_body.name == Req_body.name;\r",
							"});\r",
							"\r",
							"pm.test(\"Check Age(Req)\", function () {\r",
							"    Res_body.age == Req_body.age;\r",
							"});\r",
							"\r",
							"pm.test(\"Check Salary(Req)\", function () {\r",
							"    Res_body.salary == Req_body.salary;\r",
							"});\r",
							"\r",
							"console.log(Res_body.family)\r",
							"pm.test(\"Check Salary 1.5 year(Req)\", function () {\r",
							"    Res_body.salary.u_salary_1_5_year == Req_body.salary * 4;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kokos",
							"type": "text"
						},
						{
							"key": "age",
							"value": "18",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kokos",
							"disabled": true
						},
						{
							"key": "age",
							"value": "18",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Res_body = pm.response.json();\r",
							"var Req_par = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Check Name (Req)\", function () {\r",
							"    Res_body.name == Req_par.name;\r",
							"});\r",
							"\r",
							"pm.test(\"Check Age(Req)\", function () {\r",
							"    Res_body.age == Req_par.age;\r",
							"});\r",
							"\r",
							"pm.test(\"Check Salary(Req)\", function () {\r",
							"    Res_body.salary == Req_par.salary;\r",
							"});\r",
							"\r",
							"console.log(Res_body.family)\r",
							"\r",
							"var r =  Res_body.family.pets.dog\r",
							"pm.test(\"Check dog has name\", function () {\r",
							"        pm.expect(r).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Check dog has age\", function () {\r",
							"    pm.expect(r).to.have.property(\"age\");\r",
							"});\r",
							"pm.test(\"Check dog's name is Luky\", function () {\r",
							"    pm.expect(r.name).to.eql(\"Luky\");\r",
							"});\r",
							"pm.test(\"Check dog's age is 4\", function () {\r",
							"    pm.expect(r.age).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kokos",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "18",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Kokos&age=18&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kokos"
						},
						{
							"key": "age",
							"value": "18"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Res_body = pm.response.json();\r",
							"var Req_par = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Check Name (Req)\", function () {\r",
							"    Res_body.name == Req_par.name;\r",
							"});\r",
							"\r",
							"pm.test(\"Check Age(Req)\", function () {\r",
							"    Res_body.age == Req_par.age;\r",
							"});\r",
							"\r",
							"console.log(Req_par.salary);\r",
							"console.log(Res_body.salary);\r",
							"console.log(Res_body.salary[0]);\r",
							"console.log(Res_body.salary[1]);\r",
							"console.log(Res_body.salary[2]);\r",
							"pm.test(\"Check 1st el\", function () {\r",
							"        pm.expect(Res_body.salary[0]).to.eql(+Req_par.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check 2nd el\", function () {\r",
							"        pm.expect(+Res_body.salary[1]).to.eql(+Req_par.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check 3rd el\", function () {\r",
							"        pm.expect(+Res_body.salary[2]).to.eql(+Req_par.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", Res_body.name);\r",
							"pm.environment.set(\"age\", Res_body.age);\r",
							"pm.environment.set(\"salary\", Res_body.salary[0]);\r",
							"\r",
							"console.log(Res_body.salary.sort());\r",
							"for (let i=0; i < Res_body.salary.length; i++) {\r",
							"    console.log(Res_body.salary[i])\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kokos",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "18",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Kokos&age=18&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Kokos"
						},
						{
							"key": "age",
							"value": "18"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Res_body = pm.response.json();\r",
							"var Req_body = request.data;\r",
							"\r",
							"pm.test(\"Check start_qa_salary\", function () {\r",
							"        pm.expect(Res_body).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"        pm.expect(Res_body).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"        pm.expect(Res_body).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"        pm.expect(Res_body).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years\", function () {\r",
							"        pm.expect(Res_body).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check person\", function () {\r",
							"        pm.expect(Res_body).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary req-res\", function () {\r",
							"        pm.expect(Res_body.start_qa_salary).to.eql(+Req_body.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary 6_months req-res\", function () {\r",
							"        pm.expect(Res_body.qa_salary_after_6_months).to.eql(+Req_body.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary 12_months req-res\", function () {\r",
							"        pm.expect(Res_body.qa_salary_after_12_months).to.eql(+Req_body.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary 1.5 year req-res\", function () {\r",
							"        pm.expect(Res_body[\"qa_salary_after_1.5_year\"]).to.eql(+Req_body.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary 3.5_years req-res\", function () {\r",
							"        pm.expect(Res_body[\"qa_salary_after_3.5_years\"]).to.eql(+Req_body.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"        pm.expect(Res_body.person.u_name[1]).to.eql(+Req_body.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"        pm.expect(Res_body.person.u_age).to.eql(+Req_body.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary 5_years req-res\", function () {\r",
							"        pm.expect(Res_body.person[\"u_salary_5_years\"]).to.eql(+Req_body.salary*4.2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}",
							"disabled": true
						},
						{
							"key": "age",
							"value": "{{age}}",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}